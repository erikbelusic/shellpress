#!/bin/bash
# ShellPress

# Args
# $1 - project-name

# Define Colors for output
font_red=`tput setaf 1`
font_green=`tput setaf 2`
font_yellow=`tput setaf 3`
font_blue=`tput setaf 4`
font_magenta=`tput setaf 5`
font_cyan=`tput setaf 6`
font_reset=`tput sgr0`
font_bold=`tput bold`





# Fancy Intro
echo "${font_magenta}${font_bold}===========================================${font_cyan}"
echo " __ _          _ _   ___                   "
echo "/ _\ |__   ___| | | / _ \_ __ ___  ___ ___ "
echo "\ \| '_ \ / _ \ | |/ /_)/ '__/ _ \/ __/ __|"
echo "_\ \ | | |  __/ | / ___/| | |  __/\__ \__ \\"
echo "\__/_| |_|\___|_|_\/    |_|  \___||___/___/"
echo "${font_magenta}===========================================${font_reset}"





#=============================================
# 1 - Script Setup
#=============================================
echo "${font_yellow}[INITIALIZING]${font_reset}"

# Get the location of shellpress
BASEDIR=$(dirname $0)

# Get the users working directory
RUN_DIR=$PWD

echo "${font_green}[COMPLETED]${font_reset} Initializing"





echo "${font_yellow}[LOADING]${font_reset} Congifuration Files"

# Import Configuration File
source ${BASEDIR}/shellpress.conf

echo "${font_green}[COMPLETED]${font_reset} congifuration files loaded"





echo "${font_yellow}[SETTING]${font_reset} MySQL"

# Choose MYSQL path
if [[ $global_mysql == true ]]; then
	MYSQL_COMMAND="mysql"
else
	MYSQL_COMMAND="$path_to_mysql" 
fi

echo "${font_green}[COMPLETED]${font_reset} using $MYSQL_COMMAND"





#=============================================
# 2 - Directory Setup
#=============================================
# Check if an argument was passed
if [[ $1 ]] ; then
	# Save argument as the project name
	PROJECT_NAME=$1
else
	# Ask the user for the project name
	while [[ $PROJECT_NAME == "" ]]; do
		read -p "${font_cyan}[PROMPT]${font_reset} Enter Project Name: " PROJECT_NAME
	done
fi





echo "${font_yellow}[CREATING]${font_reset} project directory"

# Create directory at current location with project name
mkdir $PROJECT_NAME

echo "${font_green}[COMPLETED]${font_reset} created $PROJECT_NAME at path ${RUN_DIR}/${PROJECT_NAME}"





echo "${font_yellow}[CHANGING]${font_reset} into new project directory"

# Chang directory to the one we just created
cd $PROJECT_NAME

echo "${font_green}[COMPLETED]${font_reset} changed directory to ${RUN_DIR}/${PROJECT_NAME}"




#=============================================
# 3 - Download
#=============================================
echo "${font_yellow}[DOWNLOADING]${font_reset} latest release version of WordPress via https://wordpress.org/latest.tar.gz"

# Download wordpress
curl -O https://wordpress.org/latest.tar.gz

echo "${font_green}[COMPLETED]${font_reset} downloaded latest release version of WordPress"




#=============================================
# 4 - Extract
#=============================================
echo "${font_yellow}[EXTRACTING]${font_reset} WordPress"

# Extract WordPress
tar xfz latest.tar.gz

echo "${font_green}[COMPLETED]${font_reset} extracted WordPress"




#=============================================
# 5 - Move
#=============================================
echo "${font_yellow}[MOVING]${font_reset} WordPress to ${RUN_DIR}/${PROJECT_NAME}"

# Move WordPress files to project directory
mv wordpress/* ./

echo "${font_green}[COMPLETED]${font_reset} moved WordPress to ${RUN_DIR}/${PROJECT_NAME}"



#=============================================
# 6 - Store Config Info
#=============================================
# Prompt for db host
read -p "${font_cyan}[PROMPT]${font_reset} Enter Database Host: ${font_magenta}[${default_db_host}]${font_reset} " PROJECT_DB_HOST
if [[ $PROJECT_DB_HOST == "" ]]; then
	PROJECT_DB_HOST=$default_db_host
fi




# Prompt for db username
read -p "${font_cyan}[PROMPT]${font_reset} Enter Database Username: ${font_magenta}[${default_db_username}]${font_reset} " PROJECT_DB_USERNAME
if [[ $PROJECT_DB_USERNAME == "" ]]; then
	PROJECT_DB_USERNAME=$default_db_username
fi




# Prompt for db password
read -p "${font_cyan}[PROMPT]${font_reset} Enter Database Password: ${font_magenta}[${default_db_password}]${font_reset} " PROJECT_DB_PASSWORD
if [[ $PROJECT_DB_PASSWORD == "" ]]; then
	PROJECT_DB_PASSWORD=$default_db_password
fi




# Prompt for db name
read -p "${font_cyan}[PROMPT]${font_reset} Enter Database Name: ${font_magenta}[${PROJECT_NAME}]${font_reset} " PROJECT_DB_NAME
if [[ $PROJECT_DB_NAME == "" ]]; then
	PROJECT_DB_NAME=$PROJECT_NAME
fi




# Random prefix
default_table_prefix="sp_"$(date +%s | md5 | head -c 6)"_"
# Prompt for table prefix
read -p "${font_cyan}[PROMPT]${font_reset} Enter Table Prefix: ${font_magenta}[${default_table_prefix}]${font_reset} " PROJECT_TABLE_PREFIX
if [[ $PROJECT_TABLE_PREFIX == "" ]]; then
	PROJECT_TABLE_PREFIX=$default_table_prefix
fi





#=============================================
# 7 - Create Custom wp-config.php file
#=============================================
echo "<?php
/**
 * The base configurations of the WordPress.
 *
 * This file has the following configurations: MySQL settings, Table Prefix,
 * Secret Keys, WordPress Language, and ABSPATH. You can find more information
 * by visiting {@link http://codex.wordpress.org/Editing_wp-config.php Editing
 * wp-config.php} Codex page. You can get the MySQL settings from your web host.
 *
 * This file is used by the wp-config.php creation script during the
 * installation. You don't have to use the web site, you can just copy this file
 * to \"wp-config.php\" and fill in the values.
 *
 * @package WordPress
 */
// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define('DB_NAME', '${PROJECT_DB_NAME}');
/** MySQL database username */
define('DB_USER', '${PROJECT_DB_USERNAME}');
/** MySQL database password */
define('DB_PASSWORD', '${PROJECT_DB_PASSWORD}');
/** MySQL hostname */
define('DB_HOST', '${PROJECT_DB_HOST}');
/** Database Charset to use in creating database tables. */
define('DB_CHARSET', 'utf8');
/** The Database Collate type. Don't change this if in doubt. */
define('DB_COLLATE', '');
/**#@+
 * Authentication Unique Keys and Salts.
 *
 * Change these to different unique phrases!
 * You can generate these using the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}
 * You can change these at any point in time to invalidate all existing cookies. This will force all users to have to log in again.
 *
 * @since 2.6.0
 */" > wp-config.php

curl https://api.wordpress.org/secret-key/1.1/salt/ > salts.txt
cat salts.txt >> wp-config.php

echo "/**#@-*/
/**
 * WordPress Database Table prefix.
 *
 * You can have multiple installations in one database if you give each a unique
 * prefix. Only numbers, letters, and underscores please!
 */
\$table_prefix  = '${PROJECT_TABLE_PREFIX}';
/**
 * WordPress Localized Language, defaults to English.
 *
 * Change this to localize WordPress.  A corresponding MO file for the chosen
 * language must be installed to wp-content/languages. For example, install
 * de.mo to wp-content/languages and set WPLANG to 'de' to enable German
 * language support.
 */
define ('WPLANG', '');
/**
 * For developers: WordPress debugging mode.
 *
 * Change this to true to enable the display of notices during development.
 * It is strongly recommended that plugin and theme developers use WP_DEBUG
 * in their development environments.
 */
define('WP_DEBUG', false);
/* That's all, stop editing! Happy blogging. */
/** Absolute path to the WordPress directory. */
if ( !defined('ABSPATH') )
	define('ABSPATH', dirname(__FILE__) . '/');
/** Sets up WordPress vars and included files. */
require_once(ABSPATH . 'wp-settings.php');" >> wp-config.php





#=============================================
# 8 - Create Database
#=============================================
$MYSQL_COMMAND --user=$PROJECT_DB_USERNAME --password=$PROJECT_DB_PASSWORD --host=$PROJECT_DB_HOST --execute="CREATE DATABASE $PROJECT_DB_NAME;"







#TODOS

#create wp-config file from sampe
#prompt user for values + prefix
#replace default values with entered values
#OPTIONAL - get salts from online and replace
#connect to mamp mysql
#create database with project name

#copy in any other files

#clean up





echo '========================================'
echo '|           Begining Cleanup           |'
echo '========================================'

rmdir ./wordpress/
rm -f latest.tar.gz
rm salts.txt

echo 'DONE.'